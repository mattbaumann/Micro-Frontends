buildscript {
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.6.BUILD-SNAPSHOT")
	}
}

plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "org.asciidoctor.convert" version "1.5.3"
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'ch.hsr.apparch'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url 'https://repo.spring.io/libs-snapshot' }
    mavenCentral()
}


// REST API Documentation generation
ext {
    snippetsDir = file('build/generated-snippets')
}




// Remove all dependencies to logback
configurations.all({
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
})

dependencies {
    asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.2.RELEASE"

    implementation('org.apache.commons:commons-lang3:3.7')
    implementation('org.springframework.boot:spring-boot-starter')
    annotationProcessor 'org.apache.logging.log4j:log4j-core'
    implementation('org.springframework.boot:spring-boot-starter-log4j2')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-data-rest')
	implementation('org.springframework.boot:spring-boot-starter-hateoas')
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.data:spring-data-rest-hal-browser')
	runtimeOnly('com.h2database:h2')
    annotationProcessor 'org.projectlombok:lombok'
	compileOnly('org.projectlombok:lombok')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.mockito', module: 'mockito-core'
        exclude group: 'junit', module: 'junit'
    }
    testImplementation group: 'io.rest-assured', name: 'spring-mock-mvc'
    testImplementation group: 'org.springframework.restdocs', name: 'spring-restdocs-restassured'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine'
    testImplementation group: 'org.mockito', name: 'mockito-core'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}