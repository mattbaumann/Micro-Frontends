
plugins {
    id "java"
    id "eclipse"
    id "idea"
    id 'war'
    id "org.asciidoctor.convert"
    id 'io.franzbecker.gradle-lombok'
}

group = 'ch.hsr.apparch'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

// Remove all dependencies to logback (Logging framework) - we use Log4J2
configurations {
    asciidoclet
}

// Remove all dependencies to logback (Logging framework) - we use Log4J2
configurations.all({
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
})

dependencies {
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter', version: '2.0.0.RELEASE')
    // Logging with Log4J2 - https://logging.apache.org/log4j/2.x/
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '2.0.0.BUILD-SNAPSHOT')
    
    // Controllers - Thymeleaf rendering - https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html
    runtimeOnly(group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '2.0.0.BUILD-SNAPSHOT')
    // WebMVC https://docs.spring.io/spring/docs/5.0.0.BUILD-SNAPSHOT/spring-framework-reference/htmlsingle
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.0.0.BUILD-SNAPSHOT')

    // CORS implementation
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.0.0.BUILD-SNAPSHOT')
    
    // REST API - https://docs.spring.io/spring-data/rest/docs/current/reference/html/
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest', version: '2.0.0.BUILD-SNAPSHOT')
    // Database backend - https://docs.spring.io/spring-data/jpa/docs/current/reference/html/
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.0.0.RELEASE')
    runtimeOnly(group: 'org.springframework.data', name: 'spring-data-rest-hal-browser', version: '3.0.0.BUILD-SNAPSHOT')
    runtimeOnly(group: 'com.h2database', name: 'h2', version: '1.4.197')

    // https://projectlombok.org/features/all
    compileOnly(group: 'org.projectlombok', name: 'lombok', version: '1.18.0')
    // Javadoc needs this dependency to compile
    compileOnly(group: 'javax.interceptor', name: 'javax.interceptor-api', version: '1.2.2')

    annotationProcessor 'org.apache.logging.log4j:log4j-core'
    annotationProcessor 'org.projectlombok:lombok'

    //
    // Testing
    //
    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.0.0.RELEASE') {
        exclude (group: 'org.mockito', module: 'mockito-core')
        exclude (group: 'junit', module: 'junit')
    }
    // JUnit 5 Runner - https://junit.org/junit5/
    testImplementation(group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.1')
    testRuntimeOnly(group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.1')
    // Mocking framework - https://site.mockito.org/
    testImplementation(group: 'org.mockito', name: 'mockito-core', version: '2.23.0')
}

javadoc {
    options.docletpath = configurations.asciidoclet.files.toList()
    options.doclet = 'org.asciidoctor.Asciidoclet'
}
